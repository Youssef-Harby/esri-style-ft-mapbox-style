import{d as r,y as o,bK as g,f as m,c as l,b as d,s as u,g as c}from"./index-C4o9E24G.js";import{a as y}from"./BitmapContainer-CeTLIPZ8.js";import{m as f,u as x}from"./LayerView-BsI49ZBi.js";import{$ as w}from"./GraphicsView2D-CkDcGdA2.js";import{h as _}from"./HighlightGraphicContainer-D_OWHV5n.js";import{v}from"./ExportStrategy--oaCfYrA.js";import{m as H}from"./ExportImageParameters-DlZBBesm.js";import{i as I}from"./RefreshableLayerView-xfE2vCh5.js";import{U,r as V}from"./drapedUtils-BbN24u0C.js";import"./WGLContainer-McJS3wBJ.js";import"./LabelMetric-KAaqshWp.js";import"./Texture-BoRsvRAE.js";import"./Program-w5raoiHK.js";import"./ProgramTemplate-DBEUAibq.js";import"./Container-OowPLjph.js";import"./highlightReasons-Brk0wMPJ.js";import"./config-MDUrh2eL.js";import"./earcut-B47ZBR4f.js";import"./featureConversionUtils-DScGjTGw.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./scaleUtils-Cso0f2dc.js";import"./FieldsIndex-DgA0xIJQ.js";import"./UnknownTimeZone-S21V1uz7.js";import"./UpdateTracking2D-CCp2zDDU.js";import"./TurboLine-BJQaee58.js";import"./utils-FxrC-M-X.js";import"./Rect-CUzevAry.js";import"./labelUtils-BoVpV1QB.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-BB3CCvh9.js";import"./constants-D5zmR9t2.js";import"./OverrideHelper-DSvwq8ZL.js";import"./quantizationUtils-DQ21mfhw.js";import"./AttributeStore-B2awseyX.js";import"./TimeOnly-D7lhXrrF.js";import"./timeSupport-DZ3dA9Uj.js";import"./json-Wa8cmqdu.js";import"./diffUtils-DUOlX9Yx.js";import"./FeatureCommandQueue-C8TG2iwp.js";import"./normalizeUtilsSync-BAekoWcL.js";import"./AGraphicContainer-C54uvSI3.js";import"./TechniqueInstance-Dm1LSlLy.js";import"./TileContainer-VYrUK1aU.js";import"./vec3f32-nZdmKIgz.js";import"./Bitmap-BC-kxkgL.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-mmd-MW03.js";import"./popupUtils-CLwQikaZ.js";const b=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([o()],e.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],e.prototype,"floors",null),r([o({readOnly:!0})],e.prototype,"exportImageVersion",null),r([o()],e.prototype,"layer",void 0),r([o()],e.prototype,"suspended",void 0),r([o(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let a=class extends b(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,s=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:s,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,s){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(t,e,i,s){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],a.prototype,"strategy",void 0),r([o()],a.prototype,"updating",void 0),a=r([m("esri.views.2d.layers.MapImageLayerView2D")],a);const It=a;export{It as default};

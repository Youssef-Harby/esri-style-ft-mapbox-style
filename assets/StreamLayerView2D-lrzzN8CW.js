import{d as s,y as o,f as h,g as m,N as l,eF as _,e as y}from"./index-C4hnvMrD.js";import{d as c}from"./FeatureSet-BO3IYzXv.js";import{n as f,X as g}from"./FeatureLayerView2D-DZ6lXwDH.js";import{d as v}from"./FeatureEffect-DHPm5Tl0.js";import"./diffUtils-Ct7V6rzi.js";import"./Container-DqsaTclR.js";import"./highlightReasons-C5a4Oi3n.js";import"./Texture-DgVd6HKu.js";import"./LayerView-D41CgrZd.js";import"./scaleUtils-Gfrl4ttB.js";import"./TechniqueInstance-CxVugNUB.js";import"./UpdateTracking2D-CDIpkqDK.js";import"./TurboLine-cIkvO6dA.js";import"./earcut-Cq4mcn08.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-xqc3qKSU.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Bpj7G_7H.js";import"./Program-Df271-JO.js";import"./labelUtils-Dghz0NXD.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-DQH1ZLWC.js";import"./constants-D5zmR9t2.js";import"./TileContainer-Lj9kBkSo.js";import"./WGLContainer-DHxDnFWK.js";import"./ProgramTemplate-BV3PDwnS.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-mHfM9HMN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BbjeymCg.js";import"./labelingInfo-BRUgTK9a.js";import"./LabelClass-BTMXDWwO.js";import"./jsonUtils-CTbw_OHZ.js";import"./heatmapUtils-BZ1VxJFo.js";import"./SDFHelper-BvXvn5Zb.js";import"./floatRGBA-DWIY3lXh.js";import"./FeatureCommandQueue-CJ5TOHLa.js";import"./HighlightCounter-CzQQJJj4.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BuGa30fZ.js";import"./RefreshableLayerView-PX50ZlX0.js";const S=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([o()],t.prototype,"_isUserPaused",void 0),s([o({readOnly:!0})],t.prototype,"connectionStatus",null),s([o({type:v})],t.prototype,"filter",void 0),t=s([h("esri.layers.mixins.StreamLayerView")],t),t};let i=class extends S(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,e=>this._worker.streamMessenger.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._worker.streamMessenger.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>{this._worker.streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new l("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return _(e.map(p=>this.on(p,t)));const r=["data-received","message-received"].includes(e);r&&this._worker.streamMessenger.enableEvent(e,!0);const a=super.on(e,t),n=this;return y(()=>{a.remove(),r&&(n._worker.closed||n.hasEventListener(e)||n._worker.streamMessenger.enableEvent(e,!1))})}queryLatestObservations(e,t){var r,a,n;if(!((r=this.layer.timeInfo)!=null&&r.endField||(a=this.layer.timeInfo)!=null&&a.startField||(n=this.layer.timeInfo)!=null&&n.trackIdField))throw new l("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return f(this._worker.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(p=>{const u=c.fromJSON(p);return u.features.forEach(d=>{d.layer=this.layer,d.sourceLayer=this.layer}),u}),new c({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this._worker.streamMessenger.disconnect(),this._doPause()}_doConnect(){this._worker.streamMessenger.connect(),this.resume()}_doClear(){this._worker.streamMessenger.clear(),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([o()],i.prototype,"pipelineConnectionStatus",void 0),s([o()],i.prototype,"pipelineErrorString",void 0),s([o({readOnly:!0})],i.prototype,"connectionError",null),s([o({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=s([h("esri.views.2d.layers.StreamLayerView2D")],i);const de=i;export{de as default};

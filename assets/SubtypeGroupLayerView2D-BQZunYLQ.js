import{d as a,f as n,g as d,P as u,E as l}from"./index-BAXfM_uJ.js";import{X as g}from"./FeatureLayerView2D-2wNqs1Tz.js";import"./diffUtils-D0Abfze1.js";import"./Container-Cnc9ozCm.js";import"./highlightReasons-tzrV06mz.js";import"./Texture-DmQT9X-N.js";import"./FeatureEffect-CkkhALkB.js";import"./FeatureSet-D_J5u5o2.js";import"./LayerView-BJ6d-10J.js";import"./scaleUtils-j7I0RB9c.js";import"./TechniqueInstance-CfChH0WM.js";import"./UpdateTracking2D-CBuldL_D.js";import"./TurboLine-DYtGTVej.js";import"./earcut-bl6JYibc.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-CZr2hS-L.js";import"./Rect-CUzevAry.js";import"./LabelMetric-D9hnUYNi.js";import"./Program-PgF_jasp.js";import"./labelUtils-DUfAMCpr.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-CGM8SK0E.js";import"./constants-D5zmR9t2.js";import"./TileContainer-GKGSjlU8.js";import"./WGLContainer-B71_JXPB.js";import"./ProgramTemplate-fSGssA9B.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-DF5IXvnx.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BpzKoK6G.js";import"./labelingInfo-DNlevxUR.js";import"./LabelClass-C-FXIX12.js";import"./jsonUtils-C4pva3eo.js";import"./heatmapUtils-DD8awBru.js";import"./SDFHelper-CI5XPgRF.js";import"./floatRGBA-BJrwz8u7.js";import"./FeatureCommandQueue-BVyuZ5sR.js";import"./HighlightCounter-B7m_JKTU.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-D86JOXzf.js";import"./RefreshableLayerView-BAjVQqfn.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

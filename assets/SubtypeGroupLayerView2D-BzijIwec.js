import{d as a,f as n,g as d,P as u,E as l}from"./index-CEWggaxV.js";import{X as g}from"./FeatureLayerView2D-Dw_5zj3d.js";import"./diffUtils-B4YFa5Ju.js";import"./Container-CB7SlLB9.js";import"./highlightReasons-DbgbcWKM.js";import"./Texture-DJgkMrSB.js";import"./FeatureEffect-ByrbZlne.js";import"./FeatureSet-CYJUZgOk.js";import"./LayerView-BEFTHNYv.js";import"./scaleUtils-Bqauo1zZ.js";import"./TechniqueInstance-CSsTmbek.js";import"./UpdateTracking2D-nj9Q-3df.js";import"./TurboLine-CkxIB4ZX.js";import"./earcut-hRlx3adE.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-p-5Bbga5.js";import"./Rect-CUzevAry.js";import"./LabelMetric-D2hbzzy_.js";import"./Program-DLRmaKpw.js";import"./labelUtils-Dnqx6jl5.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-BS8sJGjF.js";import"./constants-D5zmR9t2.js";import"./TileContainer-Ci6dOowA.js";import"./WGLContainer-B_Pv-8Yi.js";import"./ProgramTemplate-BICQrNzS.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-CmP9mw0r.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DKzv2-WS.js";import"./labelingInfo-CijajRsc.js";import"./LabelClass-6cZokw8y.js";import"./jsonUtils-qYmXvGJ1.js";import"./heatmapUtils-Clt5rJzr.js";import"./SDFHelper-CSK796Wb.js";import"./floatRGBA-BLm-Rhaq.js";import"./FeatureCommandQueue-Btq_FXyi.js";import"./HighlightCounter-abgLEfgq.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BovqErR_.js";import"./RefreshableLayerView-C1-PEoNB.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

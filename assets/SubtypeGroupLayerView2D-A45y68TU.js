import{d as a,f as n,g as d,P as u,E as l}from"./index-CLKIlV2s.js";import{X as g}from"./FeatureLayerView2D-CiXioMlu.js";import"./diffUtils-Dj3kgvnN.js";import"./Container-CE9IwfTm.js";import"./highlightReasons-DVO6FNer.js";import"./Texture-CeSrjbDD.js";import"./FeatureEffect-BIUgvgz6.js";import"./FeatureSet-DZ_t3ZAG.js";import"./LayerView-h89Ql45R.js";import"./scaleUtils-4c-lJrfA.js";import"./TechniqueInstance---HLUShK.js";import"./UpdateTracking2D-DszlzKr_.js";import"./TurboLine-CL-ll9Bb.js";import"./earcut-D291AwzE.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-CkZ5Vbu2.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DBNeRfXT.js";import"./Program-BaJFsdGD.js";import"./labelUtils-m9UdLzv4.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-Cl34whM4.js";import"./constants-D5zmR9t2.js";import"./TileContainer-Ctp67CJr.js";import"./WGLContainer-CqXvYiaA.js";import"./ProgramTemplate-B51NagIU.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-wO9GcJ7D.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Dab1ZiM9.js";import"./labelingInfo-VNcuDH2V.js";import"./LabelClass-DgaDBvrt.js";import"./jsonUtils-BSzDxoQJ.js";import"./heatmapUtils-qv2YSNsV.js";import"./SDFHelper-SBv1y0M1.js";import"./floatRGBA-lAvxH_cD.js";import"./FeatureCommandQueue-HKOEt8VE.js";import"./HighlightCounter-DXj-Wj0I.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-2Cfgh66d.js";import"./RefreshableLayerView-BkbLlo_l.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

import{d as a,f as n,g as d,P as u,E as l}from"./index-C4o9E24G.js";import{X as g}from"./FeatureLayerView2D-CTqYe1hl.js";import"./diffUtils-DUOlX9Yx.js";import"./Container-OowPLjph.js";import"./highlightReasons-Brk0wMPJ.js";import"./Texture-BoRsvRAE.js";import"./FeatureEffect-DPm3oE6P.js";import"./FeatureSet-RJYiwUyB.js";import"./LayerView-BsI49ZBi.js";import"./scaleUtils-Cso0f2dc.js";import"./TechniqueInstance-Dm1LSlLy.js";import"./UpdateTracking2D-CCp2zDDU.js";import"./TurboLine-BJQaee58.js";import"./earcut-B47ZBR4f.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-FxrC-M-X.js";import"./Rect-CUzevAry.js";import"./LabelMetric-KAaqshWp.js";import"./Program-w5raoiHK.js";import"./labelUtils-BoVpV1QB.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-BB3CCvh9.js";import"./constants-D5zmR9t2.js";import"./TileContainer-VYrUK1aU.js";import"./WGLContainer-McJS3wBJ.js";import"./ProgramTemplate-DBEUAibq.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-DScGjTGw.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-p0S-LxQC.js";import"./labelingInfo-Dz7XkiLU.js";import"./LabelClass-DIrB-jiZ.js";import"./jsonUtils-CG9TbLOP.js";import"./heatmapUtils-BLPb12uF.js";import"./SDFHelper-CF1LfZPE.js";import"./floatRGBA-CDZn9akm.js";import"./FeatureCommandQueue-C8TG2iwp.js";import"./HighlightCounter-BDTfwbBM.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-CLwQikaZ.js";import"./RefreshableLayerView-xfE2vCh5.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

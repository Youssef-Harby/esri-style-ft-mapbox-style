import{d as a,f as n,g as d,P as u,E as l}from"./index-BkV_HQRW.js";import{X as g}from"./FeatureLayerView2D-BoiUVKcw.js";import"./diffUtils-fgzpxQR1.js";import"./Container-Dhv7DQhg.js";import"./highlightReasons-BgVs7lRw.js";import"./Texture-DASi2tqQ.js";import"./FeatureEffect-DqDNQrx3.js";import"./FeatureSet-0biTOVdJ.js";import"./LayerView-B_829eEs.js";import"./scaleUtils-DsCdpSn1.js";import"./TechniqueInstance-BUDIR5l_.js";import"./UpdateTracking2D-CTu1VHIP.js";import"./TurboLine-B33w_8gn.js";import"./earcut-BE_nt83B.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-D-suRMNY.js";import"./Rect-CUzevAry.js";import"./LabelMetric-C4_ysO8O.js";import"./Program-yzZLKfuT.js";import"./labelUtils-Bn5USrAa.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-0ur975fw.js";import"./constants-D5zmR9t2.js";import"./TileContainer-DjBM2GPe.js";import"./WGLContainer-CRqPiawA.js";import"./ProgramTemplate-B4AaAlzo.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-jeRwLEAM.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Clk5ERKI.js";import"./labelingInfo-C5MDYU6p.js";import"./LabelClass-cqu0JSwS.js";import"./jsonUtils-Bjth_OpO.js";import"./heatmapUtils-Boe_BMue.js";import"./SDFHelper-DnJbe5pE.js";import"./floatRGBA-Ct_AMu3S.js";import"./FeatureCommandQueue-D6apjyMF.js";import"./HighlightCounter-BGAQgnuC.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-7m2OXfKA.js";import"./RefreshableLayerView-zxY1HG8t.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

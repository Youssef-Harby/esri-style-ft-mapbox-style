import{d as a,f as n,g as d,P as u,E as l}from"./index-cf7XayAB.js";import{X as g}from"./FeatureLayerView2D-B5KNQ4KY.js";import"./diffUtils-DgkCQ7LI.js";import"./Container-C0EIsNrs.js";import"./highlightReasons-DM11qiVQ.js";import"./Texture-D5jeIhEh.js";import"./FeatureEffect-CVgG3FoI.js";import"./FeatureSet-Ch4SVlvg.js";import"./LayerView-U4Wkvmjn.js";import"./scaleUtils-DqMlGKHc.js";import"./TechniqueInstance-BGY-4tPG.js";import"./UpdateTracking2D-CgZINKcf.js";import"./TurboLine-CN1mW1tR.js";import"./earcut-psFPKIi8.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-gBMxf1-r.js";import"./Rect-CUzevAry.js";import"./LabelMetric-B5EScHNA.js";import"./Program-DqS0htJW.js";import"./labelUtils-BNaa5ojy.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-BJo7CuXz.js";import"./constants-D5zmR9t2.js";import"./TileContainer-CSnh97bS.js";import"./WGLContainer-DG_zcQGT.js";import"./ProgramTemplate-BGjVMblX.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-CSV1e3Pz.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BetLCJno.js";import"./labelingInfo-_dhNF_d8.js";import"./LabelClass-9rRp2tKP.js";import"./jsonUtils-3jvovNJy.js";import"./heatmapUtils-BrLLDyPp.js";import"./SDFHelper-FuwMUkMk.js";import"./floatRGBA-BRXladle.js";import"./FeatureCommandQueue-CFlPsIkW.js";import"./HighlightCounter-CTMiOCln.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-KzOdnjIE.js";import"./RefreshableLayerView-B5w4PT0M.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};

import{d as a,f as n,g as d,P as u,E as l}from"./index-C4hnvMrD.js";import{X as g}from"./FeatureLayerView2D-DZ6lXwDH.js";import"./diffUtils-Ct7V6rzi.js";import"./Container-DqsaTclR.js";import"./highlightReasons-C5a4Oi3n.js";import"./Texture-DgVd6HKu.js";import"./FeatureEffect-DHPm5Tl0.js";import"./FeatureSet-BO3IYzXv.js";import"./LayerView-D41CgrZd.js";import"./scaleUtils-Gfrl4ttB.js";import"./TechniqueInstance-CxVugNUB.js";import"./UpdateTracking2D-CDIpkqDK.js";import"./TurboLine-cIkvO6dA.js";import"./earcut-Cq4mcn08.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./utils-xqc3qKSU.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Bpj7G_7H.js";import"./Program-Df271-JO.js";import"./labelUtils-Dghz0NXD.js";import"./defaultsJSON-CHAaurhX.js";import"./BindType-BmZEZMMh.js";import"./Util-DQH1ZLWC.js";import"./constants-D5zmR9t2.js";import"./TileContainer-Lj9kBkSo.js";import"./WGLContainer-DHxDnFWK.js";import"./ProgramTemplate-BV3PDwnS.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-mHfM9HMN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BbjeymCg.js";import"./labelingInfo-BRUgTK9a.js";import"./LabelClass-BTMXDWwO.js";import"./jsonUtils-CTbw_OHZ.js";import"./heatmapUtils-BZ1VxJFo.js";import"./SDFHelper-BvXvn5Zb.js";import"./floatRGBA-DWIY3lXh.js";import"./FeatureCommandQueue-CJ5TOHLa.js";import"./HighlightCounter-CzQQJJj4.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BuGa30fZ.js";import"./RefreshableLayerView-PX50ZlX0.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const pi=i;export{pi as default};
